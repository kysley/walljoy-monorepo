datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator db {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

model Account {
  id            String         @id @default(uuid())
  email         String         @unique
  devices       Device[]
  refreshTokens RefreshToken[]
  collections   Collection[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deviceId  String
  accountId String
  account   Account  @relation(fields: [accountId], references: [id])
}

model Device {
  id                 String      @id @default(cuid())
  deviceId           String      @unique
  // Not authorized if the device hasn't been connected to an account
  authorized         Boolean     @default(false)
  // Won't have a device name until account creation
  name               String?
  code               String
  activeCollection   Collection? @relation(fields: [activeCollectionId], references: [id])
  activeCollectionId Int?
  accountId          String?
  account            Account?    @relation(fields: [accountId], references: [id])
}

model Wallpaper {
  id         Int          @id @default(autoincrement())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  u_url      String       @unique
  collection Collection[]
}

model Collection {
  id         Int         @id @default(autoincrement())
  name       String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  owner      Account     @relation(fields: [ownerId], references: [id])
  ownerId    String
  wallpapers Wallpaper[]
  official   Boolean
  Device     Device[]
}
