type Account {
  devices: [Device!]!
  email: String!
  id: ID!
}

type Collection {
  followers: Int!
  id: ID!
  name: String!
  wallpapers: [Wallpaper!]!
}

type Device {
  authorized: Boolean!
  deviceId: String!
  followedCollection: Collection
  id: ID!
  name: String
  selectWallpaper: Wallpaper
}

type Mutation {
  authenticate(code: String!, deviceId: String!, email: String!): Account
  createAccount(code: String!, deviceId: String!, email: String!, name: String!): Account!
  followCollection(id: Int!): Device
  registerDevice(deviceId: String!): String!
  selectWallpaper(id: Int!): Device
}

type Query {
  collection(id: ID!): Collection
  collectionLatest(id: ID!): Wallpaper
  currentDevice: Device
  deviceStatus(code: String!, deviceId: String!): Boolean
  devices: [Device!]
  feed(cursor: Int, skip: Int, take: Int): [Wallpaper!]!
  me: Account
  wallpaper(id: Int!): Wallpaper
  wallpapers: [Wallpaper!]
}

type Wallpaper {
  createdAt: String!
  devices: Int!
  id: ID!
  unsplashUrl: String
}